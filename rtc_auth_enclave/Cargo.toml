[package]
name = "rtc_auth_enclave"
version = "0.1.0"
authors = ["Registree"]
edition = "2018"

[lib]
name = "enclave"
path = "src/lib.rs"
crate-type = ["staticlib"]

[build-dependencies]
cc = "1.0.67"
cbindgen = "0.19.0"

# See "Pinning SGX dependencies" in HACKING.md
[target.'cfg(not(target_env = "sgx"))'.dependencies]
sgx_tcrypto = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk.git", rev = "b9d1bda" }
sgx_types = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk.git", rev = "b9d1bda", features = ["extra_traits"] }
sgx_tstd = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk.git", rev = "b9d1bda", features = ["backtrace"] }
rand = { git = "https://github.com/mesalock-linux/rand-sgx", tag = "v0.7.3_sgx1.1.3" }
jsonwebtoken = { git = "https://github.com/mesalock-linux/jsonwebtoken-sgx" }
# TODO: confirm that we have to use a forked crate here
uuid = { git = "https://github.com/mesalock-linux/uuid-sgx", features = ["v4", "serde"] }
base64 = { git = "https://github.com/mesalock-linux/rust-base64-sgx" }

# See "Cargo patch limitation workaround" in HACKING.md:
once_cell = { git = "https://github.com/mesalock-linux/once_cell-sgx.git" }
serde = { git = "https://github.com/mesalock-linux/serde-sgx", features = ["derive"] }
serde_json = { git = "https://github.com/mesalock-linux/serde-json-sgx" }

hex = { version = "0.4.3", default-features = false, features = ["alloc"] }
secrecy = { version = "0.7.0", default-features = false }

rtc_types = { path = "../rtc_types", features = ["teaclave_sgx"] }

[dependencies]
rtc_tenclave = { path = "../rtc_tenclave" }

[patch."https://github.com/apache/teaclave-sgx-sdk.git"]
sgx_tstd = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk.git", rev = "b9d1bda" }

# getrandom-sgx: https://github.com/mesalock-linux/getrandom-sgx/blob/sgx_1.1.3/Cargo.toml#L21-L24
sgx_libc = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk.git", rev = "b9d1bda" }
sgx_trts = { git = "https://github.com/apache/incubator-teaclave-sgx-sdk.git", rev = "b9d1bda" }
